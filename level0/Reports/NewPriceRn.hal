//<halrule>server-only</halrule>
external procedure HTCusts(string, string, var string);
external procedure ExtractObj(string,var Integer,var string);
external function Boolean GetItemNameStr(Integer,var string,string,string,string);
external procedure HTSort1(Integer, var string);
external procedure HTArtSel(string,string,var string);
external procedure ImagesExcel(record RcVc,array string,array string,array string,array string);

SetLangMode(LangRussian,"RUS",0);


global
procedure NewPriceGeneration(record RcVc RepSpec)
begin 
  record INVc INr;
	record ITVc ITr;
	record PLVc PLr;
  record ItemStatusVc ISr;
  String 200 tstr;
	string 255 filename;
	string 100 sortkey;
  Boolean testf;
  Boolean TrHs;
  Integer i,j,rwcnt;
	array string 255 agroup, acode, aname, abarcode;
	
	
	TrHs = true;
	
  //sortkey = "Group";
  sortkey = "Name";
	if(nonblank(RepSpec.f3)) then begin
		sortkey = "Name";
	end;
  while (LoopKey(sortkey,INr,1,TrHs)) begin
    testf = true;
		
    if(nonblank(RepSpec.f3) and INr.Group!=RepSpec.f3)then begin
      testf = false;
    end;
		
    if(nonblank(RepSpec.f1) and INr.Code!=RepSpec.f1)then begin
      testf = false;
    end;
		
    if (nonblank(RepSpec.ObjStr)) then begin
      if (SetInSet(RepSpec.ObjStr,INr.DispGroups)==false) then begin
        testf = false;
      end;
    end;
		
		if (INr.Terminated<>0) then begin
			testf = false;
		end;
		
		ISr.Code = INr.Code;
		if(nonblank(RepSpec.f6))then begin
			ISr.Location = RepSpec.f6;
		end else begin
			ISr.Location = "1";
		end;		
		
		ReadFirstMain(ISr,2,true);
		if(ISr.Instock<=0)then begin
			testf = false;
		end;
		
    if (testf) then begin
			ITr.Code = INr.Group;
			ReadFirstMain(ITr,1,true);
			if(nonblank(RepSpec.f3))then  begin
        agroup[agroup.length] = ITr.Comment;
      end else begin
        agroup[agroup.length] = "";
      end;
      acode[acode.length] = INr.Code;
      aname[aname.length] = INr.Name;
      abarcode[abarcode.length] = INr.BarCode;
    end;
  end;
	
	ImagesExcel(RepSpec, agroup, acode, aname, abarcode);
	// RunProgram("buildXLSX.bat","");
	RepSpec.f10 = left(RepSpec.f7,len(RepSpec.f7)-5);
	logtext(0,"jar " & "-cf0M ./webcust/" & RepSpec.f10 & ".xlsx -C ./" & RepSpec.f10 & "/ .");
	  RunProgram("jar","-cf0M ./webcust/" & RepSpec.f10 & ".xlsx -C ./" & RepSpec.f10 & "/ .");
		
		
  return;  
end;            


global
procedure NewPriceRn(record RcVc RepSpec)
begin
  record INVc INr;
	record ITVc ITr;
	record PLVc PLr;
  record ItemStatusVc ISr;
  String 200 tstr;
	string 255 filename;
	string 100 sortkey;
  Boolean testf;
  Boolean TrHs;
  Integer i,j,rwcnt;
	array string 255 agroup, acode, aname, abarcode;
	
	
	RepSpec.f7 = "PricesWithImages.xlsx";
	
	NewPriceGeneration(RepSpec);
  StartReportNoHeaderJob("Прейскурант с картинками");
		RepSpec.f10 = left(RepSpec.f7,len(RepSpec.f7)-5);
	  StartFormat(15);
		OutString(0,"DblImagesExcel","https://" & RepSpec.f4 & ":" & RepSpec.f5 & "/" & RepSpec.f10 & ".xlsx",false);
	  EndFormat;
	EndJob;
  return;  
end;            


global
procedure PartnerPricesXlsx()
begin
	record CUVc CUr;
	area aexp;
	val bal;
	record RcVc RepSpec;
	
	logtext(0,"PartnerPrices");
	
	RepSpec.f7 = "PartnerPrices.xlsx";
	NewPriceGeneration(RepSpec);
	
return;
end;
