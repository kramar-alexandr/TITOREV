//<halrule>server-only</halrule>
external procedure HTCusts(string, string, var string);
external procedure ExtractObj(string,var Integer,var string);
external function Boolean GetItemNameStr(Integer,var string,string,string,string);
external procedure HTSort1(Integer, var string);
external procedure HTArtSel(string,string,var string);
external procedure ImagesExcel(record RcVc, array string,array string,array string);

SetLangMode(LangRussian,"RUS",0);

global
procedure NewPriceRn(record RcVc RepSpec)
begin
  Integer rw;
  Integer keys;
  Integer vatflag;
  record INVc INr;
  record PLDefVc PLDefr;
  record AccBlock ARb;
  val t,t2;
  String 50 fromart,toart;
  String 20 frit,toit;
  string 255 frcu,tocu,filename,fstr;
  String 20 ckey;
  String 200 tstr, namestr;
  String 50 lastgroup;
  String 10 curncycode;
  Boolean itemout;
  Boolean testf,pldeff,temppldeff;
  Boolean TrHs;
  string 60 sz,msk,mskrep;  
  string 200 varsubset;  
  array string 10 apricelist;
  integer i,k,pos,h,step;
	array string 255 acode, aname, abarcode;

  fromart = FirstInRange(RepSpec.f1,20);
  toart =  LastInRange(RepSpec.f1,20);
  
  frit = FirstInRange(RepSpec.f3,5);
  toit =  LastInRange(RepSpec.f3,5);
  
  vatflag = 0;
  lastgroup = "";
  rw = 1;
  if (nonblank(RepSpec.f2)) then begin
    PLDefr.Code = RepSpec.f2;
    if (ReadFirstMain(PLDefr,1,true)) then begin
      vatflag = PLDefr.InclVAT;
      if (nonblank(PLDefr.CurncyCode)) then begin
        curncycode = PLDefr.CurncyCode;
      end;
    end else begin
    	pos = 0;
    	tstr = "";
			temppldeff = true;
			ExtractObj(RepSpec.f2,pos,tstr);			
			while (nonblank(tstr)) begin
				if(nonblank(tstr))then begin
					PLDefr.Code = tstr;
					if (ReadFirstMain(PLDefr,1,true)) then begin
						temppldeff = false;
					end;
					ExtractObj(RepSpec.f2,pos,tstr);
				end;
			end;
			tstr = "";
      pldeff = temppldeff;
    end;  
  end else begin
    BlockLoad(ARb);
    vatflag = ARb.BasePriceInclVAT;
  end;
  StartReportJob(USetStr(2321));
  HTArtSel(RepSpec.f1,RepSpec.f3,tstr);
  Header(rw,tstr,1);
  rw=rw+1;
  HTSort1(RepSpec.flags[2],tstr);
  Header(rw,tstr,1);
  rw = rw+1;    
  if (nonblank(RepSpec.AccStr)) then begin
    tstr = USetStr(1156);
    tstr = tstr & RepSpec.AccStr;
    Header(rw,tstr,1);
    rw = rw + 1; 
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(2321);
    tstr = tstr & ": ";
    tstr = tstr & RepSpec.f2;
    Header(rw,tstr,1);
    
    k=0;
    pos = 0;
    tstr = "";
		ExtractObj(RepSpec.f2,pos,tstr);
		while (nonblank(tstr)) begin
			if(nonblank(tstr))then begin
				apricelist[k] = tstr;
				k = k + 1;
				ExtractObj(RepSpec.f2,pos,tstr);
			end;
		end;
		tstr = "";
    
  end;
  if (nonblank(RepSpec.f5)) then begin
    HTCusts(frcu,tocu,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;
  SetRepCol(2,60);
  SetRepCol(3,120);
  SetRepCol(4,384);
  if (pldeff) then begin 
    StartFormat(15);
    OutString(0,0,USetStr(26433),false);
    EndFormat;
    goto LLPriceRn;
  end;
  StartFormat(15);
  if (RepSpec.flags[3]==0) then begin
    OutString(0,0,USetStr(2325),false);
		OutString(2,0,USetStr(8600),false);
    OutString(3,0,USetStr(2326),false);
		
    step = (480-360)/k;
    h = 360;
    For(i=0;i<k;i=i+1) begin
	  	OutString(h,0,apricelist[i],true);
	  	h = h+step; 
    end;
  end;    
  if (RepSpec.flags[3]==1) then begin
    OutString(0,0,USetStr(2325),false);
		OutString(60,0,USetStr(8600),false);
    OutString(120,0,USetStr(2326),false);
  end;
  EndFormat;
  if (RepSpec.flags[2]==0) then begin
    INr.Code = fromart;
    ckey = "Code";
    keys = 1;
  end;
  if (RepSpec.flags[2]==1) then begin
    INr.Group = frit;
    INr.Code = fromart;
    ckey = "Group";
    keys = 2;
  end;
  if (RepSpec.flags[2]==3) then begin
    INr.Group = "";
    ckey = "GroupName";
    keys = 1;
  end;
  
  if (RepSpec.flags[2]==2) then begin
    INr.Name = "";
    ckey = "Name";
    keys = 1;
  end;
  Gray_Divider(0,1);
  TrHs = true;
  while (LoopKey(ckey,INr,1,TrHs)) begin
      testf = true;
      if (nonblank(RepSpec.AccStr)) then begin /* Not in the Interface */
        if (INr.Department<>RepSpec.AccStr) then begin
          testf = false;
        end;
      end;
      if (INr.NotForSales!=0) then begin
        testf = false;
      end;
      if (RepSpec.flags[2]==0) then begin
        if (TrHs) then begin
          if (nonblank(toit)) then begin
            if (INr.Group>toit) then begin
              testf = false;
            end;
          end;  
        end;    
        if (TrHs) then begin
          if (nonblank(frit)) then begin
            if (INr.Group<frit) then begin
              testf = false;
            end;
          end;
        end;      
        if (TrHs) then begin
          if (nonblank(toart)) then begin
            if (INr.Code>toart) then begin
              TrHs = false;
            end;
          end;
        end;      
      end;
      if (RepSpec.flags[2]==1) then begin
        if (TrHs) then begin
          if (nonblank(toit)) then begin
            if (INr.Group>toit) then begin
              TrHs = false;
            end;
          end;
        end;      
        if (TrHs) then begin
          if (nonblank(toart)==true) then begin
            if (INr.Code>toart) then begin
              testf = false;
            end;
          end;
        end;      
        if (TrHs) then begin
          if (nonblank(fromart)==true) then begin
            if (INr.Code<fromart) then begin
              testf = false;
            end;
          end;
        end;      
      end;
      if (RepSpec.flags[2]==2) then begin
        if (TrHs) then begin
          if (nonblank(toit)) then begin
            if (INr.Group>toit) then begin
              testf = false;
            end;
          end;
        end;      
        if (TrHs) then begin
          if (nonblank(frit)) then begin
            if (INr.Group<frit) then begin
              testf = false;
            end;
          end;
        end;      
        if (TrHs) then begin
          if (nonblank(toart)) then begin
            if (INr.Code>toart) then begin
              testf = false;
            end;
          end;
        end;      
        if (TrHs) then begin
          if (nonblank(fromart)) then begin
            if (INr.Code<fromart) then begin
              testf = false;
            end;
          end;
        end;      
      end;
	
      if (RepSpec.flags[2]==3) then begin
        if (TrHs) then begin
					if (nonblank(RepSpec.f3) and !setinset(INr.Group,RepSpec.f3)) then begin
						testf = false;
					end;
        end;      
        if (TrHs) then begin
          if (nonblank(toart)) then begin
            if (INr.Code>toart) then begin
              testf = false;
            end;
          end;
        end;      
        if (TrHs) then begin
          if (nonblank(fromart)) then begin
            if (INr.Code<fromart) then begin
              testf = false;
            end;
          end;
        end;      
      end;	
      
      if (nonblank(RepSpec.f4)) then begin
        if (INr.Department <> RepSpec.f4) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.ObjStr)) then begin
        if (SetInSet(RepSpec.ObjStr,INr.DispGroups)==false) then begin
          testf = false;
        end;
      end;
      if (INr.Terminated<>0) then begin testf = false; end;
      if (TrHs==false) then begin testf = false; end;
      if (testf) then begin
				StartFormat(15);
					OutString(0,"DblINVc",INr.Code,false);
					OutString(60,0,INr.BarCode,false);
					OutString(120,0,INr.Name,false);
				EndFormat;
				acode[acode.length] = INr.Code;
				aname[aname.length] = INr.Name;
				abarcode[abarcode.length] = INr.BarCode;
      end;
  end;
	tstr = "test";
	tstr = tstr & "_" & CurrentUser & "_" & DateToString(CurrentDate,"DDMMYYYY") & "_" & CurrentTime;
	filename = tstr & ".xlsx";
	ImagesExcel(RepSpec, acode, aname, abarcode);
	// MessageBox(0,filename);
	// MessageBox(0,CurrentUser);
	// MessageBox(0,DateToString(CurrentDate,"DDMMYYYY"));
	// MessageBox(0,CurrentTime);
LLPriceRn:;
  EndJob; 
  return;  
end;            
