external procedure CuPerRn(record RcVc);// Edit ************************** Monday, 13 November 2017 13:56:48
external inner function boolean MySendWebRequest(string,integer,integer,boolean,string,string,string,string,boolean,area,var area,integer);

procedure GetCurTimeInStr(var string res)
BEGIN
  Time tt;
  
  tt = CurrentTime;
  res = GetHour(tt);
  res = res & GetMinute(tt);
  RETURN;
END;

procedure PLCodesExtract(var array string plcodes,string plstring,var integer arcnt)
BEGIN
  string 1 strchar;
  integer i;
  record PLDefVc PLDefr;
  
  arcnt = 0;
  if blank(plstring) then begin
    while LoopMain(PLDefr,1,true) begin
      plcodes[arcnt] = PLDefr.Code;
      arcnt = arcnt+1;
    end;
  end else begin
    for (i=0;i<len(plstring);i=i+1) begin
      strchar = mid(plstring,i,1);
      if strchar=="," then begin
        arcnt = arcnt+1;
      end else begin
        plcodes[arcnt] = plcodes[arcnt] & strchar;
      end;
    end;
  end;
  
  RETURN;
END;

procedure PLItemPriceSerch(array string plcodes,string plstring,var integer arcnt,string item)
BEGIN
  integer i;
  record PLVc PLr;
  
  for (i=0;i<arcnt+1;i=i+1) begin
   PLr.ArtCode = item;
   PLr.PLCode = plcodes[i];
   if nonblank(plcodes[i]) then begin
     if ReadFirstKey("ArtCode",PLr,2,true) then begin
      ExportVal(PLr.ExVatPrice,M4Val);
     end else begin
      ExportString("-");
     end;
   end;
  end;
  
  RETURN;
END;

procedure ISItemQtySerch(string item,string location,var val qty)
begin
  record ItemStatusVc ISr;

  ISr.Code = item;
  if nonblank(location) then begin
    ISr.Location = location;
  end else begin
    ISr.Location = ";;;";
  end;
  qty = 0;
  if ReadFirstMain(ISr,2,true) then begin
    qty = ISr.Instock;
  end;
  
  return;
end;

//global
procedure ManualExportItemEn(record RcVc RepSpec)
BEGIN
record INVc INr;
string 255 tstr,curtimestr;
val qty;
array string 5 plcodes;
integer arcnt,i;
  
  SetLangMode(LangRussian,"RUS",0);

  if (SetExportCodepage("CP1251")) then begin end;
  PLCodesExtract(plcodes,RepSpec.f3,arcnt);
  curtimestr = "";
  GetCurTimeInStr(curtimestr);
  tstr = RepSpec.f1;
  tstr = tstr & DateToString(CurrentDate,"MMDDYY");
  tstr = tstr & curtimestr & ".txt";
//  CreateFile(tstr);
  if RepSpec.flags[0]==1 then begin
    ExportString("Код");
    ExportString("К-во");
    for (i=0;i<arcnt+1;i=i+1) begin
      ExportString(plcodes[i]);
    end;
    NewLine;
  end;
  while LoopMain(INr,1,true) begin
    if len(RepSpec.f4) == 0 or SetInSet(INr.Group, RepSpec.f4) then begin  // mik
      ExportString(INr.Code);
      ISItemQtySerch(INr.Code,RepSpec.f2,qty);
      ExportVal(qty,M4Val);
      PLItemPriceSerch(plcodes,RepSpec.f3,arcnt,INr.Code);
      NewLine;
    end;  // mik
  end;
  
 //  CloseFile;
  return;
END;

//global
//procedure EveryDayTimedHal()
//begin
//  record RcVc RepSpec;
//  record EveryDayExpTimeBlock EDETb;
//  row EveryDayExpTimeBlock EDETbw;
//  record EveryDayExportBlock EDEb;
//  record BackupBlock BBr;
//  integer rwcnt,i,numoffiles;
//  String 100 fname;
//  String 255 dexist,dway;
//  Time t;
//  Date d;
// 
//  BlockLoad(EDETb);
//  BlockLoad(EDEb);
//  BlockLoad(BBr);
//  
//  dexist = EDEb.DestWay & "\\";
//  if EDEb.DayPerDel!=0 then begin
//    d = AddDay(CurrentDate,-(1+EDEb.DayPerDel));
//    if DirExists(dexist) then begin
//   numoffiles = CountFilesInDir(dexist);
//      for (i=0;i<numoffiles;i=i+1) begin
//        fname = GetFileNameInDir(dexist,i);
//        if (Left(fname,6)==DateToString(d,"MMDDYY")) then begin
//          fname = dexist & fname;
//          Delete_File(fname);
//          i = i-1;
//        end;
//      end;
//    end;
//  end;
//  rwcnt = MatRowCnt(EDETb);
//  for (i=0;i<rwcnt;i=i+1) begin
//    MatRowGet(EDETb,i,EDETbw);
//    if CurrentTime<=EDETbw.Time and EDETbw.Time<AddSeconds(CurrentTime,BBr.BackgroundTimer) then begin
//      if DirExists(dexist)==false then begin
//        LogText(0,"Error AutoExportItemEn: Can't find folder " & dexist);
//        goto LEveryDayTimedHal;
//      end;
//      RepSpec.f1 = dexist;
//      RepSpec.f2 = EDEb.Location;
//      RepSpec.f3 = EDEb.PriceList;
//      RepSpec.flags[0] = EDEb.ShowFlag;
//      AutoExportItemEn(RepSpec);
//    end;
//  end;
//  
//  LEveryDayTimedHal:;
//  return;
//end;

global
procedure ManualExport()
begin
  record RcVc RepSpec;
//  record EveryDayExpTimeBlock EDETb;
//  row EveryDayExpTimeBlock EDETbw;
  record EveryDayExportBlock EDEb;
//  record BackupBlock BBr;
  integer rwcnt,i,numoffiles;
  String 100 fname;
  String 255 dexist,dway;
  Time t;
  Date d;
 
 //  BlockLoad(EDETb);
  BlockLoad(EDEb);
//  BlockLoad(BBr);
  
  dexist = EDEb.DestWay & "\\";
  if EDEb.DayPerDel!=0 then begin
    d = AddDay(CurrentDate,-(1+EDEb.DayPerDel));
    if DirExists(dexist) then begin
    numoffiles = CountFilesInDir(dexist);
      for (i=0;i<numoffiles;i=i+1) begin
        fname = GetFileNameInDir(dexist,i);
        if (Left(fname,6)==DateToString(d,"MMDDYY")) then begin
          fname = dexist & fname;
          Delete_File(fname);
          i = i-1;
        end;
      end;
    end;
  end;
//  rwcnt = MatRowCnt(EDETb);
//  for (i=0;i<rwcnt;i=i+1) begin
//    MatRowGet(EDETb,i,EDETbw);
//    if CurrentTime<=EDETbw.Time and EDETbw.Time<AddSeconds(CurrentTime,BBr.BackgroundTimer) then begin
      if DirExists(dexist)==false then begin
        LogText(0,"Error AutoExportItemEn: Can't find folder " & dexist);
        goto LEveryDayTimedHal;
      end;
      RepSpec.f1 = dexist;
      RepSpec.f2 = EDEb.Location;
      RepSpec.f3 = EDEb.PriceList;
      RepSpec.flags[0] = EDEb.ShowFlag;
	  RepSpec.f4 = EDEb.Group; // mik
      ManualExportItemEn(RepSpec);
//    end;
//  end;

  LEveryDayTimedHal:;
  return;
end;

global procedure ExportReportToFileEn(record IPVc IPr)
begin
	area request,reply;
	
	
	MySendWebRequest("127.0.0.1",1301,1301,false,"GET","/WebSaveExportReportToFileEn.hal?serrnr=" & IPr.SerNr,"text/xml","",false,request,reply,5);
	
return;
end;


global webpublic procedure WebSaveExportReportToFileEn()
begin
	record RcVc RepSpec;
	string 50 setext;
	record IPVc IPr;
	integer i,mtrw,acnt;
	row IPVc IPrw;
	vector boolean custflag;
	array string 50 acust;
	record CUVc CUr;
	
	setext = WebGetArg("serrnr");
	setcompany(1,false);
		if(nonblank(setext))then begin
			IPr.SerNr = stringtolongint(setext);
			if(readfirstmain(IPr,1,true))then begin
				mtrw = matrowcnt(IPr);
				For(i=0;i<mtrw;i=i+1) begin
	  			matrowget(IPr,i,IPrw);
	  			if(nonblank(IPrw.CustCode))then begin
	  				if(custflag[IPrw.CustCode]==false)then begin
	  					custflag[IPrw.CustCode] = true;
	  					acust[acnt] = IPrw.CustCode;
	  					acnt = acnt + 1;
	  				end;
	  			end;
				end; 
				
				For(i=0;i<acnt;i=i+1) begin
					CUr.Code = acust[i];
					if(readfirstmain(CUr,1,true))then begin
						ReportDefaults(RepSpec,"CuPer2RClass");
						RepSpec.flags[8] = 1;
						RepSpec.f1 = CUr.Code;
						RepSpec.ArtMode = 1;
						RepSpec.flags[2] = 1;
						RepSpec.sStartDate = addday(currentdate,-30);
						RepSpec.sEndDate = currentdate;
						
						createfile("CuPerRn_" & CUr.Code & ".txt");
						closefile;
						openexportfile("CuPerRn_" & CUr.Code & ".txt",true);
						CuPerRn(RepSpec);
						closefile;
						
						MySendWebRequest("127.0.0.1",1301,1301,false,"GET","/WebSaveExportReportToFileEn.hal?serrnr=" & IPr.SerNr,"text/xml","",false,request,reply,5);
						
					end;
				end; 
			end;
		end;
	resetcompany(1);
	
return;
end;