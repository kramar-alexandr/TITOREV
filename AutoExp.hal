//<halrule>server-only</halrule>
external inner function string 255 StrReplace(string,string,string);// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 27 November 2017 18:09:21
external inner procedure ExtractObj(string,var Integer,var string);// Edit ************************** BPI Ukraine - KramarAlexandr - 05, 17 01 2020 y. at 2:27:07 PM
external procedure exportCustomerCSV(record RcVc);// Edit ************************** BPI Ukraine - KramarAlexandr - 05, 02 04 2021 y. at 6:24:51 PM
procedure GetCurTimeInStr(var string res)
BEGIN
  Time tt;
  
  tt = CurrentTime;
  res = GetHour(tt);
  res = res & GetMinute(tt);
  RETURN;
END;

procedure PLCodesExtract(var array string plcodes,string plstring,var integer arcnt)
BEGIN
  string 1 strchar;
  integer i;
  record PLDefVc PLDefr;
  
  arcnt = 0;
  if blank(plstring) then begin
    while LoopMain(PLDefr,1,true) begin
      plcodes[arcnt] = PLDefr.Code;
      arcnt = arcnt+1;
    end;
  end else begin
    for (i=0;i<len(plstring);i=i+1) begin
      strchar = mid(plstring,i,1);
      if strchar=="," then begin
        arcnt = arcnt+1;
      end else begin
        plcodes[arcnt] = plcodes[arcnt] & strchar;
      end;
    end;
  end;
  
  RETURN;
END;

procedure PLItemPriceSerch(array string plcodes,string plstring,var integer arcnt,string item)
BEGIN
  integer i;
  record PLVc PLr;
  
  for (i=0;i<arcnt+1;i=i+1) begin
   PLr.ArtCode = item;
   PLr.PLCode = plcodes[i];
   if nonblank(plcodes[i]) then begin
     if ReadFirstKey("ArtCode",PLr,2,true) then begin
      ExportVal(PLr.ExVatPrice,M4Val);
     end else begin
      ExportString("-");
     end;
   end;
  end;
  
  RETURN;
END;

procedure PLItemPriceSerchCSV(array string plcodes,string plstring,var integer arcnt,string item,var string scv)
BEGIN
  integer i;
  record PLVc PLr;
  
  for (i=0;i<arcnt+1;i=i+1) begin
   PLr.ArtCode = item;
   PLr.PLCode = plcodes[i];
   if nonblank(plcodes[i]) then begin
     if ReadFirstKey("ArtCode",PLr,2,true) then begin
     	if(PLr.ExVatPrice!=0)then begin
      	scv = scv & valtostring(PLr.ExVatPrice,m45Val,"",".",0) & ";";
      end else begin
      	scv = scv & ("0;");
      end;
     end else begin
      scv = scv & ("0;");
     end;
   end;
  end;
  
  RETURN;
END;

procedure ISItemQtySerch(string item,string location,var val qty)
begin
  record ItemStatusVc ISr;
	integer pos;
	string 100 tstr;
	
  ISr.Code = item;
  if nonblank(location) then begin
    //ISr.Location = location;
    
    pos = 0;
    ExtractObj(location,pos,tstr);
    qty = 0;
    while(nonblank(tstr))begin
    	
    	if(nonblank(tstr))then begin
    		ISr.Location = tstr;
    		ISr.Code = item;
				if (ReadFirstMain(ISr,2,true)) then begin
					qty = qty + ISr.Instock;
					if(currentcompany==1)then begin
						qty = qty - ISr.OrddOut + ISr.RsrvQty;// Edit ************************** Monday, 13 February 2017 14:41:11
					end;
				end;
			end;
    	ExtractObj(location,pos,tstr);
    end;
    
    
  end else begin
    ISr.Location = ";;;";
		qty = 0;
		if ReadFirstMain(ISr,2,true) then begin
			qty = ISr.Instock;
			if(currentcompany==1)then begin
				qty = qty - ISr.OrddOut + ISr.RsrvQty;// Edit ************************** Monday, 13 February 2017 14:41:11
			end;
		end;
  end;
  
  if(qty<0)then begin// Edit ************************** BPI Ukraine - KramarAlexandr - 07, 15 11 2020 y. at 12:16:17 PM
  	qty = 0;
  end;
  
  
  return;
end;

global
procedure AutoExportItemEn(record RcVc RepSpec)
BEGIN
record INVc INr;
string 255 tstr,curtimestr;
val qty;
array string 5 plcodes;
integer arcnt,i;
string 255 headers,rows;// Edit ************************** BPI Ukraine - KramarAlexandr - Friday, 6 April 2018 16:07:57
  
  SetLangMode(LangRussian,"RUS",0);
	
	if(nonblank(RepSpec.f5))then begin
		if(blank(RepSpec.f2))then begin
			RepSpec.f2 = RepSpec.f5;
		end else begin
			RepSpec.f2 = RepSpec.f2 & "," & RepSpec.f5;
		end;
	end;
	
  if (SetExportCodepage("CP1251")) then begin end;
  PLCodesExtract(plcodes,RepSpec.f3,arcnt);
  curtimestr = "";
  GetCurTimeInStr(curtimestr);
  tstr = RepSpec.f1;
  tstr = tstr & DateToString(CurrentDate,"MMDDYY");
  tstr = tstr & curtimestr & ".txt";
  CreateFile(tstr);
  if RepSpec.flags[0]==1 then begin
    ExportString("Код");
    ExportString("К-во");
    for (i=0;i<arcnt+1;i=i+1) begin
      ExportString(plcodes[i]);
    end;
    NewLine;
  end;
  while LoopMain(INr,1,true) begin
    if len(RepSpec.f4) == 0 or SetInSet(INr.Group, RepSpec.f4) then begin  // mik
      ExportString(INr.Code);
      ISItemQtySerch(INr.Code,RepSpec.f2,qty);
      ExportVal(qty,M4Val);
      PLItemPriceSerch(plcodes,RepSpec.f3,arcnt,INr.Code);
      NewLine;
	end;  // mik
  end;
  
  CloseFile;
  
  tstr = RepSpec.f1;
  tstr = tstr & "prices.csv";
  CreateFile(tstr);
  	headers = "websites;sku;";
  	for (i=0;i<arcnt+1;i=i+1) begin
      headers = headers & "group_price:Opt_price_" & plcodes[i] & ";";
    end;
    headers = headers & "qty;in_stock";
  	ExportPadString(headers,len(headers),"",false);
  	NewLine;
  	resetloop(INr);
  	INr.Code = "";
  	while LoopMain(INr,1,true) begin
  		rows = "base;";
			if len(RepSpec.f4) == 0 or SetInSet(INr.Group, RepSpec.f4) then begin  // mik
				rows = rows & INr.Code & ";";
				
				PLItemPriceSerchCSV(plcodes,RepSpec.f3,arcnt,INr.Code,rows);
				ISItemQtySerch(INr.Code,RepSpec.f2,qty);
				if(qty>0)then begin
					rows = rows & valtostring(qty,m45Val,"",".",1) & ";1";
				end else begin
					rows = rows & valtostring(qty,m45Val,"",".",1) & ";0";
				end;
				ExportPadString(rows,len(rows),"",false);
				NewLine;
			end;  // mik
		end;
  	
  CloseFile;
  
  exportCustomerCSV(RepSpec);// Edit ************************** BPI Ukraine - KramarAlexandr - 05, 02 04 2021 y. at 6:24:27 PM
  
  return;
END;

global
procedure EveryDayTimedHal2()
begin
  record RcVc RepSpec;
  record EveryDayExpTimeBlock EDETb;
  row EveryDayExpTimeBlock EDETbw;
  record EveryDayExportBlock EDEb;
  record BackupBlock BBr;
  integer rwcnt,i,numoffiles;
  String 100 fname;
  String 255 dexist,dway;
  Time t;
  Date d;
  record CompaniesBlock CBb;// Edit ************************** Tuesday, 29 November 2016 12:59:58
	row CompaniesBlock CBrw;// Edit ************************** Tuesday, 29 November 2016 12:59:58
	integer mtrw,j;// Edit ************************** Tuesday, 29 November 2016 12:59:59
 	
 	blockload(CBb);
 	
 	mtrw = matrowcnt(CBb);// Edit ************************** Tuesday, 29 November 2016 13:00:00
 	For(j=0;j<mtrw;j=j+1) begin// Edit ************************** Tuesday, 29 November 2016 13:00:00
 		if(SetCompany(j+1,false))then begin// Edit ************************** Tuesday, 29 November 2016 13:00:01
			BlockLoad(EDETb);
			BlockLoad(EDEb);
			BlockLoad(BBr);
	
			dexist = EDEb.DestWay & "\\";
			if EDEb.DayPerDel!=0 then begin
				d = AddDay(CurrentDate,-(1+EDEb.DayPerDel));
				if DirExists(dexist) then begin
				numoffiles = CountFilesInDir(dexist);
					for (i=0;i<numoffiles;i=i+1) begin
						fname = GetFileNameInDir(dexist,i);
						if (Left(fname,6)==DateToString(d,"MMDDYY")) then begin
							fname = dexist & fname;
							Delete_File(fname);
							i = i-1;
						end;
					end;
				end;
			end;
			rwcnt = MatRowCnt(EDETb);
			for (i=0;i<rwcnt;i=i+1) begin
				MatRowGet(EDETb,i,EDETbw);
				if CurrentTime<=EDETbw.Time and EDETbw.Time<AddSeconds(CurrentTime,BBr.BackgroundTimer) then begin
					if DirExists(dexist)==false then begin
						LogText(0,"Error AutoExportItemEn: Can't find folder " & dexist);
						goto LEveryDayTimedHal;
					end;
					RepSpec.f1 = dexist;
					RepSpec.f2 = EDEb.Location;
					RepSpec.f5 = EDEb.Locations;
					RepSpec.f3 = EDEb.PriceList;
					RepSpec.flags[0] = EDEb.ShowFlag;
					AutoExportItemEn(RepSpec);
				end;
			end;
	
			LEveryDayTimedHal:;
		end;// Edit ************************** Tuesday, 29 November 2016 13:00:03
  end;// Edit ************************** Tuesday, 29 November 2016 13:00:03
  resetcompany(1);// Edit ************************** Tuesday, 29 November 2016 13:00:04
  return;
end;

global
procedure EveryDayTimedHal()
begin
  record RcVc RepSpec;
  record EveryDayExpTimeBlock EDETb;
  row EveryDayExpTimeBlock EDETbw;
  record EveryDayExportBlock EDEb;
  record BackupBlock BBr;
  integer rwcnt,i,numoffiles;
  String 100 fname;
  String 255 dexist,dway;
  Time t;
  Date d;
  integer curcomp;
 	record CompaniesBlock CBb;// Edit ************************** Tuesday, 29 November 2016 12:59:58
	row CompaniesBlock CBrw;// Edit ************************** Tuesday, 29 November 2016 12:59:58
	integer mtrw,j;// Edit ************************** Tuesday, 29 November 2016 12:59:59
 	
 	blockload(CBb);
 	
 	mtrw = matrowcnt(CBb);// Edit ************************** Tuesday, 29 November 2016 13:00:00
 	For(j=0;j<mtrw;j=j+1) begin// Edit ************************** Tuesday, 29 November 2016 13:00:00
 		if(SetCompany(j+1,false))then begin// Edit ************************** Tuesday, 29 November 2016 13:00:01
			BlockLoad(EDETb);
			BlockLoad(EDEb);
			BlockLoad(BBr);
		
		
			dexist = EDEb.DestWay & "/";
			logtext(0,"dexist " & dexist);
			if EDEb.DayPerDel!=0 then begin
				d = AddDay(CurrentDate,-(1+EDEb.DayPerDel));
				if DirExists(dexist) then begin
				numoffiles = CountFilesInDir(dexist);
					for (i=0;i<numoffiles;i=i+1) begin
						fname = GetFileNameInDir(dexist,i);
						if (Left(fname,6)==DateToString(d,"MMDDYY")) then begin
							fname = dexist & fname;
							Delete_File(fname);
							i = i-1;
						end;
					end;
				end;
			end;
			rwcnt = MatRowCnt(EDETb);
			for (i=0;i<rwcnt;i=i+1) begin
				MatRowGet(EDETb,i,EDETbw);
				if CurrentTime<=EDETbw.Time and EDETbw.Time<AddSeconds(CurrentTime,BBr.BackgroundTimer) then begin
					if DirExists(dexist)==false then begin
						LogText(0,"Error AutoExportItemEn: Can't find folder " & dexist);
						goto LEveryDayTimedHal;
					end;
					logtext(0,"Autoexp from comany " & currentcompany);
					RepSpec.f1 = dexist;
					RepSpec.f2 = EDEb.Location;
					RepSpec.f3 = EDEb.PriceList;
					RepSpec.flags[0] = EDEb.ShowFlag;
					RepSpec.f4 = EDEb.Group;  // mik
					RepSpec.f5 = EDEb.Locations;
					AutoExportItemEn(RepSpec);
				end;
			end;
	
			/*curcomp = CurrentCompany;
			if (SetCompany(2,false)) then begin
				EveryDayTimedHal2;  
				ResetCompany(curcomp);
			end;*/
	
			LEveryDayTimedHal:;
		end;// Edit ************************** Tuesday, 29 November 2016 13:00:03
  end;// Edit ************************** Tuesday, 29 November 2016 13:00:03
  resetcompany(1);// Edit ************************** Tuesday, 29 November 2016 13:00:04
  return;
end;


