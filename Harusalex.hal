/* Haporus.hal */
external inner procedure RateField(real,real,real,string,integer,string,boolean,real,real,string,boolean);

external inner function Boolean IsStandardUnused();
external inner function Boolean IsEnterprise();
external inner function Boolean StandardHansa();
external inner function Boolean HasATOL();

external inner function Boolean HasAccPeriods();
external inner function Boolean HasAccessGroups();
external inner function Boolean HasAddFee();
external inner function Boolean HasApprovals();
external inner function Boolean HasCCPayments();
external inner function Boolean HasAdvancedAccounting();
external inner function Boolean HasAdvancedCRM();
external inner function Boolean HasAdvancedPricing();
external inner function Boolean HasAdvancedProduction();
external inner function Boolean HasAdvancedStock();
external inner function Boolean HasAged();
external inner function Boolean HasBar();
external inner function Boolean HasBase2();
external inner function Boolean HasBranch();
external inner function Boolean HasBuyBack();
external inner function Boolean HasCategories();
//external inner function Boolean HasConsigmentStock();
external inner function Boolean HasCommunicator();
external inner function Boolean HasConsignmentStock();
external inner function Boolean HasContactClassification();
external inner function Boolean HasContactRelations();
external inner function Boolean HasConsolidation();
external inner function Boolean HasCountryPerCustomer();
external inner function Boolean HasCreditLimit();
external inner function Boolean HasCustItem();
external inner function Boolean HasCustomerSearchKey();
external inner function Boolean HasDownpayments();
external inner function Boolean HasDefineColumns();
external inner function Boolean HasDeliveryAddress();
external inner function Boolean HasDepartments();
external inner function Boolean HasETaxDocuments();
external inner function Boolean HasEInvoicing();
external inner function Boolean HasEndorsedChecks();
external inner function Boolean HasExtraNLComment();
external inner function Boolean HasExtTax();
external inner function Boolean HasFavouriteActTypes();
external inner function Boolean HasFiscalPrinter();
external inner function Boolean HasFormEditor();
external inner function Boolean HasFreightAdvanced();
external inner function Boolean HasHideCostPrice();
external inner function Boolean HasHotelInterface();
external inner function Boolean HasGuestUserDefined();
external inner function Boolean HasJewelleryInterface();
external inner function Boolean HasIncomeAndExpenseBook();
external inner function Boolean HasIOUChecks();
external inner function Boolean HasItemClassification();
external inner function Boolean HasItemGroups();
external inner function Boolean HasKPIs();
external inner function Boolean HasLanguages();
external inner function Boolean HasLimitedAccess();
external inner function Boolean HasLocalMachines();
external inner function Boolean HasLoyaltyCards();
external inner function Boolean HasMailTags();
external inner function Boolean HasMainPartner();
external inner function Boolean HasMultiCurrency();
external inner function Boolean HasMultiLocations();
external inner function Boolean HasNLBudget();
external inner function Boolean HasNLBudgetClass();
external inner function Boolean HasObjects();
external inner function Boolean HasInvoiceOfficialSerNr();
external inner function Boolean HasOfficialSerNr();
external inner function Boolean HasOrderClasses();
external inner function Boolean HasPreferedOfficialSerNr();
external inner function Boolean HasNumberSeries();
external inner function Boolean HasPersons();
external inner function Boolean HasPocketScreen();
external inner function Boolean HasPositions();
external inner function Boolean HasPrepayments();
external inner function Boolean HasProjects();
external inner function Boolean HasPriceLists();
external inner function Boolean HasQualityControl();
external inner function Boolean HasReconLevel2();
external inner function Boolean HasReminderLevel();
external inner function Boolean HasRemoteBackup();
external inner function Boolean HasResourceDisplayGroups();
external inner function Boolean HasRussianPrepayment();
external inner function Boolean HasRetGoodsToSupp();
external inner function Boolean HasReturnedGoods();
external inner function Boolean HasRoute();
external inner function Boolean HasSalesman();
external inner function Boolean HasSalesmanBonus();
external inner function Boolean HasSalesGroup();
external inner function Boolean HasSecondQuantity();
external inner function Boolean HasSerialNumbers();
external inner function Boolean HasServerInCloud();
external inner function Boolean HasSettlementDiscount();
external inner function Boolean HasSimulations();
external inner function Boolean hasSimAccruals();
external inner function Boolean HasSkypeConnection();
external inner function Boolean HasSIPServerConnection();
external inner function Boolean HasStrAsSignFType();
external inner function Boolean HasTouchScreenDevice();
external inner function Boolean HasTaxMatrix();
external inner function Boolean HasTestFeatures();
external inner function Boolean HasMetroTestFeatures();
external inner function Boolean HasWorkOrders();
external inner function Boolean HasThrouLocation();
external inner function Boolean HasTouchScreenLook();
external inner function Boolean HasTREO();
external inner function Boolean HasVarieties();
external inner function Boolean HasVATZone();
external inner function Boolean HasWithholdingTax();
external inner function Boolean HasWithholdingTaxAdvanced();
external inner function Boolean HasWorkOrders();

external inner function Boolean HasStandardCRM();
external inner function Boolean HasStandardOrganizer();
external inner function Boolean HasStandardCommunicator();

external inner function Boolean HasEMail();
external inner function Boolean HasExternalEMail();

external inner function Boolean HasModAT2();
external inner function Boolean HasModBA();
external inner function Boolean HasModCheck();
external inner function Boolean HasModCL();
external inner function Boolean HasModCO();
external inner function Boolean HasModCons();
external inner function Boolean HasModCourses();
external inner function Boolean HasModCredMan();
external inner function Boolean HasModCRM();
external inner function Boolean HasModEDI();
external inner function Boolean HasModExp();
external inner function Boolean HasModHotel();
external inner function Boolean HasModHRM();
external inner function Boolean HasModIN();
external inner function Boolean HasModIntStock();
external inner function Boolean HasModNL();
external inner function Boolean HasPaymentGateway();
external inner function Boolean HasModPO();
external inner function Boolean HasModPOS();
external inner function Boolean HasModPL();
external inner function Boolean HasModPOProg();
external inner function Boolean HasModPP();
external inner function Boolean HasModProd();
external inner function Boolean HasModQT();
external inner function Boolean HasModRent();
external inner function Boolean HasModRest();
external inner function Boolean HasModRsrt();
external inner function Boolean HasModSO();
external inner function Boolean HasModSL();
external inner function Boolean HasModSVO();
external inner function Boolean HasModTS();
external inner function Boolean HasModWHM();
external inner function Boolean HasModDI();
external inner function Boolean UsePostOKButton();
external inner function Boolean HasBankImport();

external inner function string 60 UserDefined(string,string);
//external inner function real VATZoneButtonsLabelsRUS(real,real,real,real);
external inner function real VATZoneButtonsLabelsRUS(real,real,real,real);

event DefineWindows
begin
  real i,h,h1,h2,h3,h4,h5,h6,hs,v,vs,vm,hl,l,t,f,tilenr,flipnr;
  string 255 label;

  SetLangMode(LangRussian,"RUS",2);
  WindowBegin("Авансовые отчеты",ExpLClass,CGmlist,-);
  SetWRect(20,80,700,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(ExpDClass);
  UseView(ExpVc);
  FormName(PrintExpL);
  RecordList(4,17,-21,-39);
  RlColKey(4,1,    "Номер",SerNr,false,SerNr);
  RlColKeyTL(71,57,"OK",M4Mark,OKFlag,false,OKFlag);
  RlColKey(96,96,"Дата операции",TransDate,false,TransDate);
  RlColKey(221,221,"Сотрудник",Person,false,Person);
  RlColKey(305,305,"ФИО",Name,false,Name);
  RlColKey(485,485,"Сумма",PayVal,true,SerNr);
  //RlColKey(550,550,"Объект",Objects,true,SerNr);
  RlCol(550,550,"Вал.",CurncyCode,true);
 
  RlCol(-1,-1,"",Invalid,true);
  SearchField("Найти");
  BrowseSubsetButton(-40,-15);
  SpecialMenu("OK",'G',0,"OKExpLsm");
  EndWindow;
 
  
  WindowBegin("Заказы поставщикам",POLClass,CGmlist,POView);
  SpawnClass(PODClass);
  SetWRect(64,80,650,298);
  Sizeable(-1,-1,0,0);
  UseView(POVc);
  FormName(PrintPOL);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Номер",SerNr,false,SerNr);
  RlColKey(76,76,"Дата",TransDate,false,TransDate);
  RlColKey(150,150,"OK",OKFlag,false,OKFlag);
  RlColKey(176,176,"Пост.",PUFlag,false,PUFlag);
  RlColKey(210,210," Сч/ф",PIFlag,false,InvFlag);
  RlColKey(250,250,"Код",VECode,false,VECode);
  RlColKey(320,320,"Наименование",Addr0,false,Name);
  RlColKey(400,400,"Сумма",Sum4,true,SerNr);
  RlColKey(500,500,"Ссылка",Reference,false,Reference);
  SearchField("Найти");
  BrowseSubsetButton(-40,-15);
  SpecialMenu("OK",'G',0,"OKPOLsm");
  SpecialMenu("Закрыть",' ',1,"ClosePOLsm");
  SpecialMenu("Создать поступление",' ',2,"PUFromPOLsm");  
  SpecialMenu("Сделать заказы поставщикам",' ',3,"POCreatePOLsm");
  SpecialMenu("Статус заказа поставщику",' ',4,"POStatusORLsm");
  EndWindow;
  
  

  vs = 20;
  WindowBegin("Заказ поставщику",PODClass,CGview,-);
  SetWRect(20,80,750,460);
  Sizeable(-1,-1,0,0);
  UseView(POVc);
  CommunicateButton;
  ActiveFieldOnNew("VECode");
  Tile(0,74,false,"",VECode);
  EditField(75,vm=(v=6),95,"Номер",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Поставщик",Normal,VECode,false,VESClass);
  EnterSkip(PayDeal);
  EditField(h=255,v=vm,-40,"Наим.",Normal,Addr0,false,0);
  if (IsEnterprise) then begin
    EditField(h,vm=(v+=20),95,"Подписи",Normal,OKPersons,false,UserSClass);
    CheckBox(h4=-100,v,0,"ОК",OKFlag);
  end else begin
    CheckBox(h4=-100,v+=vs,0,"OK",OKFlag);
  end;
  tilenr = 1;
  TileButton(tilenr,"Условия"); tilenr = tilenr + 1;
  TileButton(tilenr,"Товары"); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Валюта"); tilenr = tilenr + 1;
  end;
  if (HasModIN) then begin
    TileButton(tilenr,"Усл. отгрузки"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Комментарий"); tilenr = tilenr + 1;
  TileButton(tilenr,"Адрес зак."); tilenr = tilenr + 1;
  TileButton(tilenr,"Адрес дост."); tilenr = tilenr + 1;
  if (IsEnterprise and StandardHansa==false) then begin
    TileButton(tilenr,"Доп. затр."); tilenr = tilenr + 1;
  end;
  tilenr = 1;
  Tile(tilenr,90,false,tilenr,TransDate); tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Дата",Normal,TransDate,false,PasteCurDate);
  EditField(h1,v+=vs,25,"Условия оплаты",Normal,PayDeal,false,PDSClass);
  if (IsEnterprise) then begin
    EditField(h1,v+=vs,82,"Действителен до",Normal,ValidUntil,false,PasteCurDate);
  end;
  /*if (HasModIN) then begin// Edit ************************** Wednesday, 4 October 2017 16:14:33
    EditField(h1,v+=vs,82,"Заплан.отгрузка",Normal,PlanShip,false,PasteCurDate);
  end;*/
  EditField(h1,v+=vs,-20,"Комментарий",Normal,Comment,false,0);
  EditField(h2,v=vm,135,"Наша ссылка",Normal,OurContact,false,0);
  EditField(h2,v+=vs,135,"Внимание",Normal,VEContact,false,ContactSClass);
  if (HasObjects) then begin
    EditField(h2,v+=vs,135,"Объекты",Normal,Objects,false,ObjSClass);
  end;
  /*if (HasModIN) then begin// Edit ************************** Thursday, 5 October 2017 10:18:53
    EditField(h2,v+=vs,135,"Рекомендатель",Normal,Reference,false,0);
  end;*/
  if (HasSalesman) then begin
    EditField(h3,v=vm,80,"Продавец",Normal,SalesMan,false,UserSClass);
  end;
  if (HasModTS) then begin
    EditField(h3,v+=vs,80,"Проект",Normal,PRCode,false,PRSClass);
  end;
  if (IsEnterprise) then begin
    EditField(h3,v+=vs,80,"Вид заказа пост.",Normal,POClass,false,POrderClassSClass);
    //EditField(h3,v+=vs,80,"Тип счета",ViewOnly,OrderType,false,0);// Edit ************************** Thursday, 5 October 2017 10:19:08
  end;
  CheckBox(h4,v=6,0,"Закрыт",Closed);

  CheckBox(h4,v+=16,0,"Цена вкл. НДС",InclVAT);  
  EnterSkip(Math);
  Tile(tilenr,120,true,tilenr,Math); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    EditField(110,-41,70,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
  end;
  if (IsEnterprise and StandardHansa==false) then begin
    //EditField(110,-21,70,"Паллеты",ViewOnly,TotPalletNr,true,0);// Edit ************************** Monday, 24 July 2017 15:36:14
    EditField(110,-21,70,"Кол-во",ViewOnly,TotQuant,true,0);// Edit ************************** Monday, 24 July 2017 15:36:15
    EditField(260,-41,70,"Фрахт",Normal,ShipCost,true,0);
    EditField(260,-21,70,"Таможня",Normal,CustomsCost,true,0);
  end;
  EditField(410,-41,70,"НДС",ViewOnly,Sum3,true,0);
  EditField(410,-21,70,"Внеш. нал.",ViewOnly,TAX1Sum,false,0);

  EditField(-169,-41,118,"Подытог",ViewOnly,Sum1,true,0);
  EditField(-169,-21,118,"Итого",ViewOnly,Sum4,true,0);
//  CheckBox(20,-21,0,"OK",OKFlag);
  v = 24;
  if (HasModIN or HasModPL or HasObjects) then begin
    MatrixBegin(3,v,-50,-44,-,199);
  end else begin
    MatrixBegin(3,v,-25,-44,-,199);
  end;
  MatTypedRow(stp);
  Flip(0);
  MatCol(1,28,"Товар",0,ArtCode,false,INSClass);
//  MatCol(1,84,"Var",0,VARList,true,VARSClass);
//  MatCol(1,144,"Qty",0,Quant,true,0);
  if (HasVarieties) then begin
    MatCol(1,94,"К-во",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(1,94,"К-во",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
//  MatCol(1,194,"Описание",0,Spec,false,0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  MatColTL(1,164,"Ед.",0,M4Code,ViewOnly,5,UnitCode,false,UnitSCLass);
  MatCol(1,204,"Наименование",0,Spec,false,0);
  if (HasJewelleryInterface) then begin
    MatCol(1,-337,"Тип склада",0,StockType,false,SetSClass);
  end;
  MatCol(1,-237,"Цена",0,Price,true,0);
  MatCol(1,-151,"%",0,vRebate,true,0);
  MatCol(1,-116,"Сумма",0,Sum,true,0);

  MatCol(1,-30,"НДС",0,VATCode,false,VATCodeSClass);
  if (HasObjects) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,164,"Наименование",0,Spec,false,0);
    if (IsEnterprise) then begin
      MatCol(1,-310,"Счёт опр.",0,CostAcc,false,AccSClass);
    end;
    MatCol(1,-240,"Объекты",0,Objects,false,ObjSClass);
    if (IsEnterprise) then begin
      MatCol(1,-170,"Товар пост.",0,VEArtCode,false,PISClass);
      MatColTL(1,-100,"Ед.пост.",0,M4Code,ViewOnly,5,VEUnit,false,UnitSCLass);//MatCol(1);
      MatCol(1,-50,"Кол. пост.",0,VEQuant,true,0);
    end;
  end;
  if (HasModIN) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    MatCol(1,164,"Наименование",0,Spec,false,0);
    MatCol(1,-330,"Пост. 1",0,Shipd1,true,0);
    MatCol(1,-270,"Пост. 2",0,Shipd2,true,0);
    if (HasModPL) then begin
      MatCol(1,-210,"Сч/ф",0,Invd,true,0);
    end;
    if (HasModWHM) then begin
      MatCol(1,-150,"№ паллеты",0,PalletNr,true,0);
    end;
    if (HasModTS) then begin
      MatCol(1,-90,"Проект",0,PRCode,true,PRSClass);
    end;
    if (HasModSVO) then begin
      MatCol(1,-40,"№ ТР.",0,WSNr,true,0);
    end;
  end;
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    if (StandardHansa==false) then begin
      MatCol(1,164,"Тип заказа",0,OrderType,false,0);
      MatCol(1,-400,"Тип склада",0,StockType,false,SetSClass);
    end else begin
      MatCol(1,164,"Наименование",0,Spec,false,0);
    end;
    if (HasTREO) then begin
      MatCol(1,-300,"TREO",0,TREO,false,SetSClass);
    end;
    MatCol(1,-200,"Запл. отгрузка",0,PlanShipRow,true,PasteCurDate);
    MatCol(1,-100,"Комментарий",0,Comment,true,0);
    if (StandardHansa==false) then begin
      Flip(flipnr); flipnr = flipnr + 1;
      MatCol(1,164,"Наименование",0,Spec,false,0);
      MatCol(1,-420,"Фрахт",0,ShipCost,true,0);
      MatCol(1,-360,"Таможня",0,CustomsCost,true,0);
      label = UserDefined("AccBlock","PUCost1");
      if (blank(label)) then begin label = "Затраты 1";end;
      MatCol(1,-300,label,0,RowCost1,true,0);
      label = UserDefined("AccBlock","PUCost2");
      if (blank(label)) then begin label = "Затраты 2";end;
      MatCol(1,-240,label,0,RowCost2,true,0);
      label = UserDefined("AccBlock","PUCost3");
      if (blank(label)) then begin label = "Затраты 3";end;
      MatCol(1,-180,label,0,RowCost3,true,0);
      label = UserDefined("AccBlock","PUCost4");
      if (blank(label)) then begin label = "Затраты 4";end;
      MatCol(1,-120,label,0,RowCost4,true,0);
      label = UserDefined("AccBlock","PUCost5");
      if (blank(label)) then begin label = "Затраты 5";end;
      MatCol(1,-60,label,0,RowCost5,true,0);
    end;
  end;
  DeleteRowTest;
  InsertRowTest;
  RowMenuBegin("");         
  if (HasModIN and GuiType!=kGuiAndroid) then begin
    RowMenuItem(0,"Статус товара",'I','I',0,"ItemStatusPODsm");         
  end;
  if (IsEnterprise) then begin
    RowMenuItem(0,"Предыдущие цены по продажам",' ',' ',0,"POLastPPrsm");         
  end;
  EndRowMenu;
  EndMatrix;
  vs = 20;
  v = v + 1;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
    vs = 20; h = 110; h2 = 295;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
    EditField(h1,v=6,50,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h1,v+vs,50,"Осноная валюта 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h1,v+vs,50,"Осноная валюта",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin  
        EditField(h1,v+(vs*2),50,"Осноная валюта 2",Normal,BaseRate2,true,0);  
      end;
      EditField(h2=295,v,50,"Курс",Normal,FrRate,true,0);  
      
      if (HasBase2) then begin  
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осноная валюта 1",false);  
      	RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Осноная валюта 2",false);         
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Осноная валюта",false);      
      end;
    end else begin
      EditField(h1,v+=vs,50,"Осноная валюта 1",Normal,BaseRate1,true,0);
      EditField(h1,v+=vs,50,"Осноная валюта 2",Normal,BaseRate2,true,0);
    end;
  end;
  if (HasModIN) then begin
    Tile(tilenr,90,false,tilenr,ShipDeal); tilenr = tilenr + 1;
    vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
    EditField(h1,v=6,80,"Условия доставки",Normal,ShipDeal,false,ShipDealSClass);
    if (IsEnterprise) then begin
      EditField(h1,v+=vs,80,"Метод доставки",Normal,ShipMode,false,DMSClass);
    end;
    if (HasMultiLocations) then begin
      EditField(h1,v+=vs,80,"Склад",Normal,Location,false,LocationSClass);
    end;
    if (IsEnterprise) then begin
      if (StandardHansa==false) then begin
        EditField(h1,v+=vs,80,"Подразделение",ViewOnly,BranchID,false,0);
        EditField(h2,v=vm,80,"Заказ на обсл.",Normal,SVONr,false,0);
        EditField(h2,v+=vs,80,"№ зак. на работу",Normal,WONr,false,0);
        EditField(h2,v+=vs,80,"№ процесса",Normal,POCQStatNr,true,POCQStatSClass);
        EditField(h2,v+=vs,80,"№ контракта",ViewOnly,POCOSerNr,true,0);
      end;
      CheckBox(473,v=vm,0,"Счёт перед поступл. товара",InvBeforePU);
      CheckBox(473,v+=vs,0,"Обнулить поступление товара",SetZeroPUQuant);
      EditField(h3,v+=vs,80,"Код транспорта интрастат",Normal,IntrastatTransCode,false,IntrastatTransCodeSClass);  
    end;
  end;
  if (IsEnterprise) then begin
    Tile(tilenr,90,false,tilenr,LangCode); tilenr = tilenr + 1;
    EditField(h1,v=6,80,"Дискон. матрица",Normal,RebCode,false,RebSClass);
    if (StandardHansa==false) then begin
      EditField(h1,v+=vs,80,"Факторинг",Normal,VEFactoring,false,VESClass);
    end;
    EditField(h1,v+=vs,80,"№ заказа",Normal,OrdNr,false,0);
    EditField(h1,v+=vs,-20,"Комментарий",Normal,Comment,false,0);
    if (HasSalesGroup) then begin
      EditField(h2,v=vm,80,"Группа продаж",Normal,SalesGroup,false,SalesGroupSClass);
      EditField(h2,v+=vs,80,"Сч/ф на",Normal,InvoiceToCode,false,VESClass);
    end;
    EditField(h2,v+=vs,80,"Ст-сть покупки",Normal,CostPerUnit,true,0);
    if (HasLanguages) then begin
      EditField(h3,v=vm,80,"Язык",Normal,LangCode,false,LangSClass);
    end;
  end else begin
    Tile(tilenr,20,false,tilenr,Comment); tilenr = tilenr + 1;
    if (HasAdvancedPricing) then begin
      EditField(h1,v=6,80,"Дискон. матрица",Normal,RebCode,false,RebSClass);
    end else begin
      EditField(h1,v=6,-20,"Коммент.",Normal,Comment,false,0);
    end;
    if (HasLanguages) then begin
      EditField(h1,v+=vs,80,"Язык",Normal,LangCode,false,LangSClass);         
    end;    
  end;
  Tile(tilenr,230,false,tilenr,Addr1); tilenr = tilenr + 1;
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Ordering"; end;
  EditField(h=110,v=6,-20,label,Normal,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "Адрес"; end;
  EditField(h,v+=vs, -20,label,Normal,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs, -20,label,Normal,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs, -20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,vm=(v+=vs), -20,label,Normal,InvAddr4,false,0);
  vm = vm + 40;
  
  if (HasApprovals) then begin
    SoftEditField(h3=h+4,v=vm,123,"Approval Status",ViewOnly,"AcceptanceStatusFlag",false,0,M4Str,255);
  end;
 
  if (HasVATZone) then begin
    v = VATZoneButtonsLabelsRUS(h3=290,v=vm,140,16);
  end;
  if (IsEnterprise) then begin
    EditField(h2=-170,v=vm,150,"Регион",Normal,Region,false,RegionSClass);
  end;
  Tile(tilenr,130,false,tilenr,ShipAddr0); tilenr = tilenr + 1;
  EditField(h,v=6,-20,"Доставка",Normal,ShipAddr0,false,0);
  EditField(h,v+=vs,-20,"Адрес",Normal,ShipAddr1,false,0);
  EditField(h,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,DelAddr4,false,0);
  if (IsEnterprise and StandardHansa==false) then begin
    Tile(tilenr,70,false,tilenr,ShipCost); tilenr = tilenr + 1;
    vs = 20; h2 = 290; h3 = 530;
    label = UserDefined("AccBlock","PUCost1");
    if (blank(label)) then begin label = "Накл. расходы 1";end;
    EditField(h1,v=6,70,label,Normal,Cost1,true,0);
    label = UserDefined("AccBlock","PUCost2");
    if (blank(label)) then begin label = "Накл. расходы 2";end;
    EditField(h2,v,70,label,Normal,Cost2,true,0);
    label = UserDefined("AccBlock","PUCost3");
    if (blank(label)) then begin label = "Накл. расходы 3";end;
    EditField(h1,v+=vs,70,label,Normal,Cost3,true,0);
    label = UserDefined("AccBlock","PUCost4");
    if (blank(label)) then begin label = "Накл. расходы 4";end;
    EditField(h2,v,70,label,Normal,Cost4,true,0);
    label = UserDefined("AccBlock","PUCost5");
    if (blank(label)) then begin label = "Накл. расходы 5";end;
    EditField(h1,v+=vs,70,label,Normal,Cost5,true,0);
    EnterSkip(TransDate);
    ButtonFrame(h3,v=16,130,2,"Расчет накл. затрат");
    RadioButton(h3,v,0,0,"Стоимость",ExtraCostsCalculation);
    RadioButton(h3,v+=16,1,0,"Вес",ExtraCostsCalculation);
  end;
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    if (HasModIN) then begin
      SpecialMenu("Статус товара",'I',2,"ItemStatusPODsm");
    end;
    SpecialMenu("Статус заказа поставщику",'r',5,"POStatRnPODsm");
    SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);         
    if (HasModIN) then begin
      SpecialMenu("Создать поступление",'L',0,"PUFromPODsm");
    end;
    if (HasModPL) then begin
      SpecialMenu("Создать реализацию",'F',1,"VIFromPODsm");
    end;
    if (IsEnterprise) then begin
      SpecialMenu("Создать возврат товаров",'B',6,"RetPUFromPODsm");
    end;

  end else begin
  SpecialMenu("Поиск товара",'f',1,"ItemSearchDsm");         
  SpecialMenu("Статус заказа поставщику",'r',5,"POStatRnPODsm");         
  if (IsEnterprise) then begin
    SpecialMenu("Резервации",' ',6,"POReservPODsm");         
  end;
  if (HasApprovals) then begin
    SpecialMenu("Запросить утверждение",' ',6,"POSendforAcceptancePODsm"); 
    SpecialMenu("Отменить запрос утверждения",' ',2,"CancelApprovalRequestDsm"); 
  end;
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);         
  if (HasModCRM) then begin
  end;
  if (HasDownpayments) then begin
    SpecialMenu("Счёт на предоплату",' ',3,"DownPayFromPODsm"); 
  end;
  if (HaseMail) then begin
    SpecialMenu("Эл. письмо",'m',3,"CreateMailFromPODsm");         
  end;
  if (HasModIN) then begin
    SpecialMenu("Поступление",'L',0,"PUFromPODsm");
  end;
  if (IsEnterprise and StandardHansa==false) then begin
    SpecialMenu("Уведомление об отгрузке",'l',0,"DropSHFromPODsm");
  end;
  if (HasModPL) then begin
    SpecialMenu("Реализацию",'F',1,"VIFromPODsm");
  end;
  if (HasRetGoodsToSupp and HasModIN) then begin
    SpecialMenu("Возврат товаров",'B',6,"RetPUFromPODsm");
  end;
  end;
  EndWindow;
  
  
    WindowBegin("Счет клиенту",ORDClass,CGview,-);
  SetWRect(20,80,660,460);
  Sizeable(-1,-1,0,0);
  UseView(ORVc);
  ActiveFieldOnNew("CustCode");    
  CommunicateButton;
  Tile(0,48+24,false,"",CustCode);
  EditField(75,vm=(v=6), 82,"Номер",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95, "Клиент",Normal,CustCode,false,CUSClass);
  EnterSkip(PayDeal);
  CheckBox(230,vm,0,"Закрыт",Closed);
  CheckBox(310,vm,0,"Зарезервировано",Reserved);
  EditField(h=270,v,-40,"Наименование",Normal,Addr0,false,0);
  TileButton(1,"Дата");
  TileButton(2,"Товары");
  TileButton(3,"Валюта");
  TileButton(4,"Условия");
  TileButton(5,"Адрес");
  TileButton(6,"Адрес отгрузки");
  Tile(1,88,false,"1",OrdDate);
  vs = 20;
  EditField(h1=110,vm=(v=6),82,"Дата",Normal,OrdDate,false,PasteCurDate);
  EditField(h1,v+=vs, 25,"Условия оплаты",Normal,PayDeal,false,PDSClass);
  EditField(h1,v+=vs, 120,"Ответственный",Normal,OurContact,false,0);
  //EditField(h1,v+=vs, 120,"Объект",Normal,Objects,false,ObjSClass);// Edit ************************** Monday, 28 August 2017 16:34:09
  EditField(h1,v+=vs,-20,"Комментарий",Normal,Comment,false,0);
  EditField(h2=350,v=vm,100,"Заплан. отгрузка",Normal,PlanShip,false,PasteCurDate);
  EditField(522,v,75,"Дата отпр.",Normal,DespatchDate,false,PasteCurDate);
  EditField(645,v,-10,"Время",Normal,DespatchTime,false,PasteCurTime);
  EditField(h2,v+=vs,60,   "Продавец",Normal,SalesMan,false,UserSClass);
  EditField(522,v,75,"Тип счета",Normal,OrderType,false,SetSClass);
  EditField(h2,v+=vs,-10,"Контактное лицо",Normal,CustContact,false,ContactSClass);
  //EditField(h2,v+=vs,200,"№ заказа клиента",Normal,CustOrdNr,false,0);// Edit ************************** Monday, 28 August 2017 16:34:00
  //EditField(645,v,-10,"Тип",Normal,OrderClass,false,OrderClassSClass);// Edit ************************** Monday, 28 August 2017 16:34:04
  EnterSkip(Math);
  Tile(2,220,true,"2",Math);
  CheckBox(20,-20,0,"OK",OKFlag);
  EditField(65,-41,50,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
  EditField(180,-41,70,"Фрахт",Normal,FrPrice,true,0);
  //EditField(180,-21,70,"Доп. налог",ViewOnly,TAX1Sum,true,0);// Edit ************************** Tuesday, 17 January 2017 10:37:40
  //EditField(310,-41,80,"НДС",ViewOnly ,Sum3,true,0);// Edit ************************** Tuesday, 17 January 2017 10:37:48
  //EditField(310,-21,80,"Налог 2",ViewOnly,TAX2Sum,true,0);// Edit ************************** Tuesday, 17 January 2017 10:37:33
  EditField(180,-21,70,"Прибыль %",Normal,GPProc,true,0);// Edit ************************** Tuesday, 17 January 2017 10:37:40
  EditField(350,-41,50,"Итого: кол-во",ViewOnly ,TotQty,true,0);// Edit ************************** Tuesday, 17 January 2017 10:37:48
  EditField(350,-21,50,"Итого прибыль",ViewOnly,TotGP,true,0);// Edit ************************** Tuesday, 17 January 2017 10:37:33
  
  EditField(460,-21,75,"Осн.1",ViewOnly,BaseSum4,true,0);
  EditField(-133,-41,95,"Итого",ViewOnly ,Sum1,true,0);
  EditField(-133,-21,95,"ВСЕГО",ViewOnly ,Sum4,true,0);
  v = 22;
  MatrixBegin(3,v,-50,-49,-,200);
  MatTypedRow(stp);
  Flip(0);
  MatText(t=9,32,"Итого",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatColTL(t,-80,"Сумма",0,-1,ViewOnly,0,Sum,true,0);
  MatText(t=17,32,"Заголовок",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatCol(t=1,32,"Товар",0,ArtCode,false,INSClass);
//  MatCol(t,94,"Var",0,VARList,true,VARSClass);
//  MatCol(t,144,"Qty",0,Quant,true,0);
  MatCol(t,94,"Кол-во",0,Quant,true,MATVARINSClass);
  EnterSkip(ArtCode);
  MatText(t=10,32,"Эта и нижележащие строки не будут печататься",false);
  Flip(1);
//  MatCol(t=1,194,"Наимен.",0,Spec,false,0);
  MatCol(t=1,144,"Наименование",0,Spec,false,0);
  MatCol(t,-235,"Цена",0,Price,true,PLSClass);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Сумма",0,Sum,true,0);
  Flip(2);
  MatCol(t=1,144,"Наименование",0,Spec,false,0);
  MatCol(t,-224,"Счет",0,SalesAcc,false,AccSClass);
  MatCol(t,-124,"Объект",0,Objects,false,ObjSClass);
  MatCol(t,-30,"НДС",0,VATCode,false,VATCodeSClass);
  Flip(3);
  MatCol(t=1,144,"Наименование",0,Spec,false,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-285,"Цена за шт.",0,Price,true,PLSClass);
    MatCol(t,-205,"%",0,vRebate,true,0);
    MatCol(t,-170,"Стоимость",0,BasePrice,true,0);
    MatCol(t,-70,"Прибыль",0,rowGP,true,0);
  end else begin
    MatCol(t,-235,"Цена за шт.",0,Price,true,PLSClass);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Сумма",0,Sum,true,0);
  end;
  Flip(4);
  MatCol(t=1,144,"Наименование",0,Spec,false,0);
  MatCol(t,-330,"Отгрузка",0,Shipd2,true,0);
  MatCol(t,-260,"Предвар.",0,Shipd1,true,0);
  MatCol(t,-180,"Счет-фактура",0,Invd,true,0);
  MatCol(t,-80,"Структура",0,Recepy,false,RecSClass);
  Flip(5);
  MatCol(t=1,144,"Наименование",0,Spec,false,0);
  MatCol(t,-370,"Серийный номер",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-240,"Запланированная отгрузка",0,PlanShipRow,true,PasteCurDate);
  MatCol(t,-70,"Фактор цены",0,PriceFactor,true,0);
  Flip(6);
  MatCol(t=1,144,"Наименование",0,Spec,false,0);
  MatCol(t,-315,"Накладная",0,ShipNote,false,0);
  MatCol(t,-210,"Склад",0,Location,false,LocationSClass);
  MatCol(t,-145,"Место",0,Position,true,UsedPosSClass);
  MatCol(t,-90,"Источник",0,Source,true,SourceSClass);
  Flip(7);
  MatCol(t=1,165,"Дата получения",0,PickingDate,false,PasteCurDate);
  MatCol(t,-390,"Время пол.",0,PickingTime,false,PasteCurTime);
  MatCol(t,-320,"Дата погр.",0,InloadingDate,true,PasteCurDate);
  MatCol(t,-250," Время погр.",0,InloadingTime,true,PasteCurTime);
  MatCol(t,-160,"Дата отправ.",0,DespatchRowDate,true,PasteCurDate);
  MatCol(t,-70," Время отпр.",0,DespatchRowTime,true,PasteCurTime);
  Flip(8);
  MatCol(t=1,144,"Наименование",0,Spec,false,0);
  MatCol(t,-390,"Ед.",0,UnitCode,false,UnitSClass);
  MatCol(t,-340,"Кол-во ед.",0,UnitFactQuant,true,0);
  MatCol(t,-250,"Ширина",0,UnitXval,true,0);
  MatCol(t,-190,"Высота",0,UnitYval,true,0);
  MatCol(t,-140,"Глубина",0,UnitZval,true,0);
  MatCol(t,-80,"Цена ед-ц",0,UnitFactPrice,true,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 20;
  v = 18; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,5,"E");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,6,"F");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,7,"G");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,8,"H");
  Tile(3,70,false,"3",FrRate);
  vs = 20;
  EditField(h=110,v=6,50,"Валюта",Normal,CurncyCode,false,CurncyCodeSClass);
  EditField(h2=295,v,50,"Курс",Normal,FrRate,true,0);
  EditField(h3=360,v,50,":",Normal,ToRateB1,true,0);
  StaticText(h3+60,v+12,"Осн. валюта 1",false);
  EditField(h,v+=vs,50,"Осн. валюта 1",Normal,BaseRate1,true,0);
  EditField(h3,v,50,":",Normal,ToRateB2,true,0);
  StaticText(h3+60,v+12,"Осн. валюта 2",false);
  EditField(h,v+=vs,50,"Осн. валюта 2",Normal,BaseRate2,true,0);
  Tile(4,215,false,"4",ShipDeal);
  vs = 20;
  EditField(h=110,v=6,60,"Условие отгрузки",Normal,ShipDeal,false,ShipDealSClass);
  EditField(h2=295,v,60,"Способ отгрузки",Normal,ShipMode,false,DMSClass);
  EditField(h3=490,v,60,"Группа продажи",Normal,SalesGroup,false,SalesGroupSClass);
  EditField(h,v+=vs,60,"Вид счета",Normal,OrderClass,false,OrderClassSClass);
  EditField(h2,v,60,"Склад",Normal,Location,false,LocationSClass);
//  EditField(h3,v,60,"Дата отправки",Normal,DespatchDate,false,0);
  EditField(h,v+=vs,60,"Проект",Normal,PRCode,false,PRSClass);
  EditField(h2,v,100,"Факторинг",Normal,InvoiceToCode,false,CUSClass);
  CheckBox(h3,v,0,"Сч/ф перед отгрузкой",InvBeforeShip);
  EditField(h,v+=vs,60,"Прейскурант",Normal,PriceList,false,PLDefSClass);
  EditField(h2,v,  -20,"Кредитная карта",Normal,CreditCard,false,CreditCardSClass);
  EditField(h,v+=vs,60,"Язык",Normal,LangCode,false,LangSClass);
  EditField(h2,v,  100,"Авторизация",Normal,AuthorizationCode,false,0);
  EditField(h,v+=vs,  60,"Таблица скидок",ViewOnly,RebCode,false,0); 
  EditField(h2,v,  100,"Подразделение",Normal,BranchID,false,AllCUSClass);
//  EditField(h2,v,60,"% скидки",ViewOnly,DiscPerc,false,0);
//  EditField(h3,v   ,-20,"Сумма скид.",ViewOnly,DiscSum,false,0);
  EditField(h,v+=vs,-20,"Комментарий",Normal,Comment,false,0);
  

  //EditField(h,v+=vs,80,"Итого: кол-во",ViewOnly,TotQty,true,0);// Edit ************************** Tuesday, 17 January 2017 10:41:43
  EditField(h,v+=vs,80,"Доп. налог",ViewOnly,TAX1Sum,true,0);// Edit ************************** Tuesday, 17 January 2017 10:40:50
  EditField(h2,v,80,"вес",ViewOnly,TotWeight,true,0);
  EditField(h3,v,80,"объем",ViewOnly,TotVolume,true,0);

  EditField(h,v+=vs,80,"Комиссия",Normal,Commision,true,0);
  EditField(h2,v,80,"Итого вкл. ком.",ViewOnly,SumIncCom,true,0);
  EditField(h3,v,-20,"Сортировка",Normal,Sorting,false,DelRouteSClass);
  if (UserCanAction("ViewCostPrice",true)) then begin
    //EditField(h,v+=vs,80,"Прибыль %",Normal,GPProc,true,0);// Edit ************************** Tuesday, 17 January 2017 10:41:32
    //EditField(h2,v,80,"Итого прибыль",ViewOnly,TotGP,true,0);// Edit ************************** Tuesday, 17 January 2017 10:41:31
    EditField(h,v+=vs,80,"НДС",ViewOnly ,Sum3,true,0);// Edit ************************** Tuesday, 17 January 2017 10:41:31
    EditField(h2,v,80,"Налог 2",ViewOnly,TAX2Sum,true,0);// Edit ************************** Tuesday, 17 January 2017 10:41:30
  end;
  Tile(5,225,false,"5",Addr1); vs = 20;
  EditField(h=110,v=6,-20,"Сч/ф на",Normal,Addr1,false,0);
  EditField(h,v+=vs,-20,"адрес",Normal,Addr2,false,0);
  EditField(h,v+=vs,-20,"",Normal,Addr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,InvAddr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,InvAddr4,false,0);
  EditField(h,vm=(v+=20),100,"Телефон",Normal,Phone,false,0);
  EditField(h,v+=20,100,"Факс",Normal,Fax,false,0);
 // v = VATZoneButtonsLabelsRUS(h2+4,v=vm+15,140,16);
  ButtonFrame(h3=520,v=vm+15,123,6,"Статус утверждения");
  RadioButton(h3,v,kAcceptanceStateNotRequired,0,"не обязательно",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"не начато",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"не запрошено",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStatePending,0,"в ожидании",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"утверждено",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"отклонено",AcceptanceStatus);  
  Tile(6,150,false,"6",ShipAddr0); vs = 20;
  EditField(h=110,v=6,-20,"Доставка",Normal,ShipAddr0,false,0);
  EditField(h,v+=vs,-20,"на адрес",Normal,ShipAddr1,false,0);
  EditField(h,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,DelAddr4,false,0);
  EditField(h,v+=vs,80,"Код доставки",Normal,DelAddrCode,false,DelAddrSClass);
  EditField(h2,v,80,"Регион",Normal,Region,false,RegionSClass); 
  EnterSkip(OrdDate);
  SpecialMenu("Поиск товара",'f',1,"ItemSearchDsm");
  SpecialMenu("Резервирования",' ',15,"OrderReservORDsm");
  SpecialMenu("Создать деятельность",'c',9,"CreateActFromORDsm");
  SpecialMenu("Создать e-mail",'m',11,"CreateMailFromORDsm");
  SpecialMenu("Создать возврат товаров",'B',6,"RetFromORsm");
  SpecialMenu("Отправить для утверждения",' ',6,"ORSendforAcceptanceORDsm");
  SpecialMenu("Создать отгрузку",'L',0,"SHFromORDsm");
  SpecialMenu("Создать перемещение по складу",' ',8,"StockMovFromORDsm");
  SpecialMenu("Создать счет-фактуру на аванс",'o',3,"DownPayFromORDsm");
  SpecialMenu("Создать счет-фактуру",'F',1,"IVFromORDsm");
  SpecialMenu("Статус счета",'r',5,"ORInfoRnORDsm");
  SpecialMenu("Статус товара",'I',2,"ItemStatusORDsm");
  SpecialMenu("Цены предыдущей продажи",' ',12,"ORLastSPrsm");
  SpecialMenu("Открыть нал. матрицу",' ',25,"OpenVatMatrixORDsm"); 
  EndWindow;


  
end;

